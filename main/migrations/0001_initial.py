# Generated by Django 5.2.1 on 2025-08-26 02:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='CustomerMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(editable=False, max_length=50, unique=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('pin_code', models.CharField(max_length=10)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='India', max_length=100)),
                ('gstn', models.CharField(blank=True, max_length=20, null=True)),
                ('pan', models.CharField(blank=True, max_length=20, null=True)),
                ('cin', models.CharField(blank=True, max_length=30, null=True)),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=20)),
                ('email_id', models.EmailField(max_length=254)),
                ('contract_date_from', models.DateField()),
                ('contract_date_to', models.DateField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('phone_number', models.CharField(max_length=15)),
                ('usertype', models.CharField(choices=[('Internal', 'Internal'), ('External', 'External')], default='Internal', max_length=10)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Supervisor', 'Supervisor'), ('Co-ordinator', 'Co-ordinator'), ('Executive', 'Executive'), ('Branch Manager', 'Branch Manager'), ('Customer', 'Customer')], max_length=20)),
                ('user_status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=8)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.branch')),
                ('company_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.customermaster')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Fleet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=20, unique=True)),
                ('vehicle_type', models.CharField(choices=[('Truck', 'Truck'), ('Trailer', 'Trailer'), ('Container', 'Container'), ('Tempo', 'Tempo'), ('Van', 'Van'), ('Other', 'Other')], max_length=20)),
                ('capacity_mt', models.DecimalField(decimal_places=2, help_text='Capacity in Metric Tons', max_digits=6)),
                ('make', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('year_of_manufacture', models.PositiveIntegerField(blank=True, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('insurance_validity', models.DateField(blank=True, null=True)),
                ('fitness_validity', models.DateField(blank=True, null=True)),
                ('permit_validity', models.DateField(blank=True, null=True)),
                ('pollution_validity', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consignment_no', models.CharField(editable=False, max_length=50, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('freight', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipment_type', models.CharField(choices=[('LTL', 'LTL'), ('FTL', 'FTL')], max_length=10)),
                ('payment_mode', models.CharField(choices=[('TO-PAY', 'TO-PAY'), ('TBB', 'TBB'), ('PAID', 'PAID'), ('FOC', 'FOC')], max_length=10)),
                ('origin', models.CharField(max_length=100)),
                ('origin_pin', models.CharField(max_length=6)),
                ('destination', models.CharField(max_length=100)),
                ('destination_pin', models.CharField(max_length=6)),
                ('vehicle_no', models.CharField(max_length=50)),
                ('driver_details', models.CharField(max_length=100)),
                ('consignor_name', models.CharField(max_length=100)),
                ('consignor_address', models.TextField()),
                ('consignor_gst', models.CharField(blank=True, max_length=20, null=True)),
                ('consignor_contact', models.CharField(max_length=20)),
                ('consignee_name', models.CharField(max_length=100)),
                ('consignee_address', models.TextField()),
                ('consignee_gst', models.CharField(blank=True, max_length=20, null=True)),
                ('consignee_contact', models.CharField(max_length=20)),
                ('invoice_ref_number', models.CharField(max_length=500)),
                ('ewaybill_number', models.CharField(blank=True, max_length=500, null=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('no_article', models.IntegerField(default=0)),
                ('actual_weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('charged_weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('pack_type', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('Booked', 'Booked'), ('In Transit', 'In Transit'), ('Out For Delivery', 'Out For Delivery'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Booked', max_length=20)),
                ('estimated_delivery_date', models.DateField(blank=True, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('pod_scan', models.FileField(blank=True, null=True, upload_to='pod_scans/')),
                ('appointment_delivery', models.BooleanField(default=False)),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('pod_link', models.URLField(blank=True, null=True)),
                ('billto_customer', models.ForeignKey(blank=True, db_column='billto_customer', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipments', to='main.customermaster', to_field='customer_id')),
            ],
        ),
        migrations.CreateModel(
            name='Manifest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manifest_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('total_articles', models.IntegerField(default=0)),
                ('total_freight', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('origin_branch', models.CharField(max_length=100, null=True)),
                ('destination_branch', models.CharField(max_length=100, null=True)),
                ('vehicle_no', models.CharField(max_length=50, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=100)),
                ('driver_contact', models.CharField(blank=True, max_length=20)),
                ('document', models.FileField(blank=True, null=True, upload_to='manifest_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shipments', models.ManyToManyField(related_name='manifests', to='main.shipment')),
            ],
        ),
    ]
